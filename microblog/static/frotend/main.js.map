{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/user.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.scss","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserComponent } from './user/user.component';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n\t{ path: '', component: AppComponent },\n\t{ path: 'login', component: UserComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n\\n<nav>\\n  <ul>\\n    <li><a routerLink=\\\"/login\\\" title=\\\"Login\\\">Login</a></li>\\n  </ul>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { UserComponent } from './user/user.component';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CoreModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: []\n})\nexport class CoreModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { User } from '../shared/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n  // http options needed while sending post requests\n  private httpOptions: any;\n\n  // actual JWT token\n  private token: string;\n\n  // JWT token expiry date\n  public tokenExpires: Date;\n\n  // username of logged in user\n  public username: string;\n\n  // errors found when logging in\n  public errors: any[] = [];\n\n  constructor(private http: HttpClient) {\n  \tthis.httpOptions = {\n  \t\theaders: new HttpHeaders({ 'Content-Type': 'application/json' })\n  \t}\n  }\n\n  login(user) {\n  \tconst loginUrl = '/api-token-auth/';\n\n  \treturn this.http.post(loginUrl, JSON.stringify(user), this.httpOptions)\n  \t\t.subscribe(\n  \t\t\tdata => {\n\t  \t\t\tthis.updateData(data['token'])\n\t  \t\t},\n\t  \t\terr => {\n\t  \t\t\tthis.errors = err['error'];\n\t  \t\t}\n  \t\t)\n  }\n\n  refreshToken() {\n  \tconst refreshUrl = '/api-token-refresh/';\n  \tthis.http.post(refreshUrl, JSON.stringify({token: this.token}), this.httpOptions)\n  \t\t.subscribe(\n  \t\t\tdata => {\n  \t\t\t\tthis.updateData(data['token']);\n  \t\t\t},\n  \t\t\terr => {\n  \t\t\t\tthis.errors = err['error'];\n  \t\t\t}\n  \t\t)\n  }\n\n  logout() {\n  \tthis.token = null;\n  \tthis.tokenExpires = null;\n  \tthis.username = null;\n  }\n\n  updateData(token): void {\n  \tthis.token = token;\n  \tthis.errors = [];\n\n  \tconst tokenParts = this.token.split(/\\./);\n  \tconst tokenDecoded = JSON.parse(window.atob(tokenParts[1]));\n  \tconsole.log(tokenDecoded);\n  \t\n  \tthis.tokenExpires = new Date(tokenDecoded * 1000);\n  \tthis.username = tokenDecoded.username;\n  }\n\n /**\n * Handle Http operation that failed.\n * Let the app continue.\n * @param operation - name of the operation that failed\n * @param result - optional value to return as the observable result\n */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }  \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: []\n})\nexport class SharedModule { }\n","module.exports = \"<h2>Log In</h2>\\n<div class=\\\"row\\\" *ngIf=\\\"!_userService.token\\\">\\n  <div class=\\\"col-sm-4\\\">\\n    <label>Username:</label><br />\\n    <input type=\\\"text\\\" name=\\\"login-username\\\" [(ngModel)]=\\\"user.username\\\">\\n    <span *ngFor=\\\"let error of _userService.errors.username\\\"><br />\\n    {{ error }}</span></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <label>Password:</label><br />\\n    <input type=\\\"password\\\" name=\\\"login-password\\\" [(ngModel)]=\\\"user.password\\\">\\n    <span *ngFor=\\\"let error of _userService.errors.password\\\"><br />\\n    {{ error }}</span>\\n  </div>\\n  <div class=\\\"col-sm-4\\\">\\n    <button (click)=\\\"login()\\\" class=\\\"btn btn-primary\\\">Log In</button\\n  </div>\\n  <div class=\\\"col-sm-12\\\">\\n    <span *ngFor=\\\"let error of _userService.errors.non_field_errors\\\">{{ error }}<br /></span>\\n  </div>\\n</div>\\n<div class=\\\"row\\\" *ngIf=\\\"_userService.token\\\">\\n  <div class=\\\"col-sm-12\\\">You are logged in as {{ _userService.username }}.<br />\\n    Token Expires: {{ _userService.token_expires }}<br />\\n    <button (click)=\\\"refreshToken()\\\" class=\\\"btn btn-primary\\\">Refresh Token</button>\\n    <button (click)=\\\"logout()\\\" class=\\\"btn btn-primary\\\">Log Out</button>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from '../core/user.service';\nimport { User } from '../shared/user';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private userService: UserService) { }\n\n  // object represents the user for the login form\n  public user: User;\n\n  ngOnInit() {\n  \tthis.user = {\n  \t\tusername: '',\n  \t\tpassword: '',\n  \t}\n  }\n\n  login(): void {\n  \tthis.userService.login(\n  \t\t{ 'username': this.user.username, 'password': this.user.password }\n  \t);\n  }\n\n  refreshToken(): void {\n  \tthis.userService.refreshToken();\n  }\n\n  logout(): void {\n  \tthis.userService.logout();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}